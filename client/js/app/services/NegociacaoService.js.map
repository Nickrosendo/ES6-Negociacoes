{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoDao","ConnectionFactory","NegociacaoService","_http","Promise","all","getNegociacaoSemana","getNegociacaoSemanaPassada","getNegociacaoSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","item","Date","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","getNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService'\r\nimport { Negociacao } from '../models/Negociacao'\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao'\r\nimport { ConnectionFactory } from './ConnectionFactory'\r\n\r\nexport class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\r\n\tgetNegociacoes() {\r\n\r\n\t\treturn Promise.all([\r\n\t\t\tthis.getNegociacaoSemana(),\r\n\t\t\tthis.getNegociacaoSemanaPassada(),\r\n\t\t\tthis.getNegociacaoSemanaRetrasada()\r\n\t\t]).then(periodos => {\r\n\r\n\t\t\tlet negociacoes = periodos\r\n\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), []);\r\n\t\t\treturn negociacoes;\r\n\t\t}).catch(erro => {\r\n\t\t\tthrow new Error(erro);\r\n\t\t});\r\n\t}\r\n\r\n\tgetNegociacaoSemana() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/semana')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn negociacoes.map((item) => new Negociacao(new Date(item.data), item.quantidade, item.valor));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível importar as negociações da semana\");\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tgetNegociacaoSemanaPassada() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/anterior')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn negociacoes.map((item) => new Negociacao(new Date(item.data), item.quantidade, item.valor));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível importar as negociações da semana anterior\");\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tgetNegociacaoSemanaRetrasada() {\r\n\r\n\t\treturn this._http\r\n\t\t\t.get('negociacoes/retrasada')\r\n\t\t\t.then(negociacoes => {\r\n\t\t\t\treturn negociacoes.map((item) => new Negociacao(new Date(item.data), item.quantidade, item.valor));\r\n\t\t\t})\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível importar as negociações da semana retrasada\");\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tcadastra(negociacao) {\r\n\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection, 'negociacoes'))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => \"Negociação adicionada com sucesso !\")\r\n\t\t\t.catch((erro) => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível adicionar a negociação\")\r\n\t\t\t});\r\n\t}\r\n\r\n\tlista() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection, 'negociacoes'))\r\n\t\t\t.then(dao => dao.listaTodos())\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível listar as negociações\")\r\n\t\t\t})\r\n\t}\r\n\r\n\tapaga() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection, 'negociacoes'))\r\n\t\t\t.then(dao => dao.apagaTodos())\r\n\t\t\t.then(() => \"Negociações apagadas com sucesso\")\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível apagar as negociações\")\r\n\t\t\t})\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.getNegociacoes()\r\n\t\t\t.then(negociacoes =>\r\n\t\t\t\tnegociacoes.filter(negociacao =>\r\n\t\t\t\t\t!listaAtual.some(negociacaoExistente => JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error(\"Não foi possível buscar negociações para importar\");\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n}"]}