{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","nomeDb","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openrequest","window","indexedDB","open","onupgradeneeded","_createStore","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA,Y,GAAS,CAAC,aAAD,C;AACTC,a,GAAU,C;AACVC,Y,GAAS,e;AAEXC,gB,GAAa,I;AACbC,W,GAAQ,I;;mCAGCC,iB;AAEX,qCAAc;AAAA;;AACZ,gBAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACD;;;;0CAEsB;;AAErB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAS,0BAAYI,eAAZ,GACE,aAAK;AACHT,kCAAkBU,YAAlB,CAA+BC,EAAEC,MAAF,CAASC,MAAxC;AACD,eAHH;;AAKAR,0BAAYS,SAAZ,GACE,aAAK;AACH,oBAAI,CAAChB,UAAL,EAAiB;;AAEfA,+BAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,0BAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,6BAAWC,KAAX,GAAmB,YAAY;AAC7B,0BAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACD,mBAFD;AAGD;AACDE,wBAAQL,UAAR;AACD,eAXH;;AAaAO,0BAAYW,OAAZ,GACE,aAAK;AACHC,wBAAQC,GAAR,CAAY,yBAAZ,EAAuCP,EAAEC,MAAF,CAASO,KAAhD;AACAf,uBAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACD,eAJH;AAKD,aA3BM,CAAP;AA4BD;;;uCAEmBtB,U,EAAY;AAC9BH,mBAAO0B,OAAP,CAAe,iBAAS;AACtB,kBAAIvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EACE1B,WAAW2B,iBAAX,CAA6BD,KAA7B;;AAEF1B,yBAAW4B,iBAAX,CAA6BF,KAA7B,EAAoC,EAAEG,eAAe,IAAjB,EAApC;AACD,aALD;AAMD;;;4CAEwB;;AAEvB,gBAAI7B,UAAJ,EAAgB;AACdC;AACAD,2BAAa,IAAb;AACD;AACF","file":"ConnectionFactory.js","sourcesContent":["\r\n\r\nconst stores = ['negociacoes'];\r\nconst version = 1;\r\nconst nomeDb = 'negociacoesDb';\r\n\r\nlet connection = null;\r\nlet close = null;\r\n\r\n\r\nexport class ConnectionFactory {\r\n\r\n  constructor() {\r\n    throw new Error(\"Não é possível instanciar a classe ConnectionFactory\");\r\n  }\r\n\r\n  static getConnection() {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let openrequest = window.indexedDB.open(nomeDb, version);\r\n\r\n      openrequest.onupgradeneeded =\r\n        e => {\r\n          ConnectionFactory._createStore(e.target.result);\r\n        };\r\n\r\n      openrequest.onsuccess =\r\n        e => {\r\n          if (!connection) {\r\n\r\n            connection = e.target.result;\r\n            close = connection.close.bind(connection);\r\n            connection.close = function () {\r\n              throw new Error(\"Não é possível fechar a conexão diretamente\");\r\n            }\r\n          }\r\n          resolve(connection);\r\n        };\r\n\r\n      openrequest.onerror =\r\n        e => {\r\n          console.log('erro connectionFactory:', e.target.error);\r\n          reject(e.target.error.name);\r\n        };\r\n    })\r\n  }\r\n\r\n  static _createStore(connection) {\r\n    stores.forEach(store => {\r\n      if (connection.objectStoreNames.contains(store))\r\n        connection.deleteObjectStore(store);\r\n\r\n      connection.createObjectStore(store, { autoIncrement: true });\r\n    });\r\n  }\r\n\r\n  static closeConnection() {\r\n\r\n    if (connection) {\r\n      close();\r\n      connection = null;\r\n    }\r\n  }\r\n}\r\n"]}